{"version":3,"sources":["NavigationBar.js","DisplayCars.js","Details.js","ContactMe.js","DisplayForm.js","CurrentBookings.js","App.js","index.js"],"names":["NavigationBar","Navbar","expand","bg","variant","Brand","className","Toggle","aria-controls","Collapse","id","Nav","Link","as","to","Component","withRouter","DisplayCars","state","Data","axios","get","then","response","setState","data","catch","error","console","log","this","length","CardColumns","map","item","i","Card","key","carnumber","Img","src","imgpath","alt","height","Title","carname","Subtitle","rpd","Button","block","pathname","status","disabled","Details","detaill","props","location","Header","ListGroup","ListGroupItem","model","seatingcapacity","color","average","fuel","vehiclenumber","ContactMe","href","title","target","DisplayForm","isRedirect","mindate","Date","maxdate","setDate","getDate","schema","yup","fullName","required","Email","email","Contact","matches","max","BookingDate","min","ReturningDate","when","window","validationSchema","onSubmit","values","alert","currentid","match","params","newBooking","Booked","post","_id","res","initialValues","handleSubmit","handleChange","handleBlur","touched","errors","Form","noValidate","Group","controlId","Label","Control","type","name","placeholder","value","onChange","onBlur","isInvalid","Feedback","InputGroup","Prepend","Text","aria-describedby","CurrentBookings","BookingsData","convertDate","val","substring","Table","striped","bordered","hover","App","path","exact","component","render","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.c4b36627.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nclass NavigationBar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand className=\"ml-4\">Car Rental Agency</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ml-auto mr-4\">\r\n                        <Nav.Link as={Link} to='/dashboard'> Dashboard</Nav.Link>\r\n                        <Nav.Link as={Link} to='/bookings'>Current Bookings</Nav.Link>\r\n                        <Nav.Link as={Link} to='/contactme'>Contact Me</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavigationBar)\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { CardColumns, Card, Button } from 'react-bootstrap'\r\n\r\nclass DisplayCars extends Component {\r\n\r\n    state = {\r\n        Data: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/details')\r\n            .then(response => {\r\n                this.setState({\r\n                    Data: response.data\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.Data);\r\n        if (this.state.Data.length === 0) {\r\n            return (\r\n                <div className=\"text-center loadcenter\">\r\n                    <h1>Loading....</h1>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container my-4\">\r\n                <CardColumns>\r\n                    {\r\n                        this.state.Data.map((item, i) => (\r\n                            <Card className=\"pb-4\" key={item.carnumber}>\r\n                                <Card.Img className=\"mb-4\" src={\"../CarImages/\" + item.imgpath} alt=\"No Image Found\" height=\"250px\" />\r\n                                <Card.Title className=\"text-center\">{item.carname}</Card.Title>\r\n                                <Card.Subtitle className=\"text-center mb-2\">Rs.{item.rpd}/day</Card.Subtitle>\r\n                                <Button variant=\"primary\" block as={Link} to={{\r\n                                    pathname: `/details/${item.carnumber}`,\r\n                                    state: { item }\r\n                                }}\r\n                                >Details</Button>\r\n                                {\r\n                                    item.status ?\r\n                                        <Button variant=\"success\" as={Link} to={`/enterdetails/${item.carnumber}`} block>Book Car</Button> :\r\n                                        <Button variant=\"danger\" disabled block>Not Available</Button>\r\n                                }\r\n                            </Card>\r\n\r\n                        ))\r\n                    }\r\n                </CardColumns>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DisplayCars);\r\n","import React, { Component } from 'react'\r\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Details extends Component {\r\n    render() {\r\n        var detaill = this.props.location.state;\r\n        return (\r\n            <div>\r\n                <div className=\"container col-md-4 my-4\">\r\n                    <Card>\r\n                        <Card.Img src={\"../CarImages/\" + detaill.item.imgpath} alt=\"No Image Found\" height=\"250px\" />\r\n                        <Card.Header className=\"text-center\">\r\n                            <Card.Title>{detaill.item.carname}</Card.Title>\r\n                            <Card.Subtitle>Only for Rs.{detaill.item.rpd} per day</Card.Subtitle>\r\n                        </Card.Header>\r\n                        <ListGroup className=\"text-center\" variant=\"flush\">\r\n                            <ListGroupItem><b>Model : </b>{detaill.item.model}</ListGroupItem>\r\n                            <ListGroupItem><b>Seating Capacity : </b>{detaill.item.seatingcapacity}</ListGroupItem>\r\n                            <ListGroupItem><b>Color : </b>{detaill.item.color}</ListGroupItem>\r\n                            <ListGroupItem><b>Average : </b>{detaill.item.average}km per litre</ListGroupItem>\r\n                            <ListGroupItem><b>Fuel Type : </b>{detaill.item.fuel}</ListGroupItem>\r\n                            <ListGroupItem><b>Vehicle Number : </b>{detaill.item.vehiclenumber}</ListGroupItem>\r\n                        </ListGroup>\r\n                        {detaill.item.status ?\r\n                            <Button variant=\"success\" as={Link} to={`/enterdetails/${detaill.item.carnumber}`} block>Book Car</Button> :\r\n                            <Button variant=\"danger\" disabled block>Not Available</Button>\r\n                        }\r\n                        <Button variant=\"primary\" as={Link} to=\"/dashboard\" block>Go to Dashboard</Button>\r\n                    </Card>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;\r\n","import React, { Component } from 'react'\r\nimport './font-awesome/css/font-awesome.min.css';\r\n\r\nexport default class ContactMe extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mydiv text-center\">\r\n                <h4>Created by</h4>\r\n                <h1>Deepak Kapoor</h1>\r\n                <h6>9646445151</h6><br />\r\n                <ul className=\"contact\">\r\n                    <li>\r\n                        <a href=\"mailto:nk93555@gmail.com\" title=\"Email Me\" target=\"__blank\">\r\n                            <i className=\"fa fa-envelope fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.facebook.com/deepak.kapoor.1905\" title=\"Facebook\" target=\"__blank\">\r\n                            <i className=\"fa fa-facebook-square fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.instagram.com/deepak._kapoor/\" title=\"Instagram\" target=\"__blank\">\r\n                            <i className=\"fa fa-instagram fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.youtube.com/channel/UCw_0N6rXyzcH-gpYsPA1Q9Q?view_as=subscriber\" title=\"Youtube\" target=\"__blank\">\r\n                            <i className=\"fa fa-youtube fa-2x\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport axios from 'axios'\r\nimport { Form, InputGroup, Button, } from 'react-bootstrap'\r\n\r\nexport default class DisplayForm extends Component {\r\n    state = {\r\n        isRedirect: false,\r\n        Data: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/details')\r\n            .then(response => {\r\n                this.setState({\r\n                    Data: response.data\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n    render() {\r\n\r\n        var phoneNum = /^\\s*(?:\\+?(\\d{1,3}))?[- (]*(\\d{3})[- )]*(\\d{3})[- ]*(\\d{4})(?: *[x/#]{1}(\\d+))?\\s*$/\r\n        var mindate = new Date();\r\n        var maxdate = new Date();\r\n        mindate.setDate(mindate.getDate() - 1)\r\n        maxdate.setDate(maxdate.getDate() + 7);\r\n        const schema = yup.object({\r\n            fullName: yup.string().required(\"Please Enter Name\"),\r\n            Email: yup.string().email().required(),\r\n            Contact: yup.string().required(\"Please Enter Valid Phone Number\").matches(phoneNum, 'Phone number is not valid')\r\n                .max(10, \"Maximum 10 digits allowed\"),\r\n            BookingDate: yup.date().required(\"Please Enter Valid Date\").min(mindate, \"Booking Date must be later than or on today\")\r\n                .max(maxdate, \"You can only book a date in the coming 7 days\"),\r\n            ReturningDate: yup.date().required(\"Please Enter Valid Date\")\r\n                .when(\"BookingDate\",\r\n                    (BookingDate, yup) => BookingDate && yup.min(BookingDate, \"Return Date must be later than Booking Date\"))\r\n        });\r\n\r\n        const isRedirect = this.state.isRedirect;\r\n        if (isRedirect === true) {\r\n            window.location = '/dashboard'\r\n        }\r\n        return (\r\n            <div className=\"mb-4\">\r\n                <div className=\"text-center my-4\">\r\n                    <h1>You are just one step away to book a car</h1>\r\n                    <p>Enter following details to book your car</p>\r\n                </div>\r\n                <Formik\r\n                    validationSchema={schema}\r\n                    onSubmit={(values) => {\r\n                        alert(\"Thank You for booking car with Car Rental Agency.\\n Enjoy your Ride \")\r\n                        this.state.Data.map((item) => {\r\n                            const currentid = this.props.match.params.id;\r\n                            if (item.carnumber === currentid) {\r\n                                const newBooking =\r\n                                {\r\n                                    fullName: values.fullName,\r\n                                    carnumber: item.carnumber,\r\n                                    carname: item.carname,\r\n                                    Booked: values.BookingDate,\r\n                                    ReturningDate: values.ReturningDate,\r\n                                    status: false,\r\n                                    vehiclenumber: item.vehiclenumber,\r\n                                    imgpath: item.imgpath\r\n                                }\r\n                                item.status = false\r\n\r\n                                axios.post('http://localhost:5000/details/updatedetails/' + item._id, newBooking);\r\n                                axios.post('http://localhost:5000/bookings/add/', newBooking)\r\n                                    .then(res => console.log(res.data))\r\n                                    .catch((error) => console.log(error));\r\n                            }\r\n                            return true\r\n                        })\r\n\r\n                        this.setState({\r\n                            isRedirect: true\r\n                        })\r\n                    }\r\n                    }\r\n                    initialValues={{\r\n                        fullName: \"\",\r\n                        Email: \"\",\r\n                        Contact: \"\",\r\n                        BookingDate: \"\",\r\n                        ReturningDate: \"\"\r\n                    }}\r\n                >\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                    }) => (\r\n                            <Form noValidate onSubmit={handleSubmit} className=\"container col-md-4\">\r\n                                <Form.Group controlId=\"inputname\">\r\n                                    <Form.Label>Full name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"fullName\"\r\n                                        placeholder=\"Enter Full Name\"\r\n                                        value={values.fullName}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.fullName && errors.fullName}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.fullName}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"inputusername\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            name=\"Email\"\r\n                                            value={values.Email}\r\n                                            onBlur={handleBlur}\r\n                                            onChange={handleChange}\r\n                                            isInvalid={touched.Email && errors.Email}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.Email}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"inputcountry\">\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        placeholder=\"Don't Include +91\"\r\n                                        name=\"Contact\"\r\n                                        value={values.Contact}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.Contact && errors.Contact}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.Contact}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"inputdob\">\r\n                                    <Form.Label>When you want to Book?</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"Date\"\r\n                                        placeholder=\"Booking Date\"\r\n                                        min={new Date()}\r\n                                        name=\"BookingDate\"\r\n                                        value={values.BookingDate}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.BookingDate && errors.BookingDate}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.BookingDate}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"inputdob\">\r\n                                    <Form.Label>Returning Date</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"Date\"\r\n                                        placeholder=\"Returning Date\"\r\n                                        name=\"ReturningDate\"\r\n                                        value={values.ReturningDate}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.ReturningDate && errors.ReturningDate}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.ReturningDate}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Button type=\"submit\" className=\"d-flex mx-auto\">SignUp</Button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nexport default class CurrentBookings extends Component {\r\n    state = {\r\n        BookingsData: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/bookings/')\r\n            .then(response => {\r\n                this.setState({\r\n                    BookingsData: response.data\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    convertDate = (val) => {\r\n        val = val.substring(0, 10);\r\n        var dd = val.substring(8, 10);\r\n        var mm = val.substring(5, 7);\r\n        var yy = val.substring(0, 4);\r\n        var finaldate = dd + '/' + mm + '/' + yy;\r\n        return finaldate;\r\n    }\r\n    render() {\r\n        if (this.state.BookingsData.length === 0) {\r\n            return (\r\n                <div className=\"loadcenter text-center\">\r\n                    <h1>Loading...</h1>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <Table className=\"text-center\" striped bordered hover variant=\"light\">\r\n                <thead >\r\n                    <tr>\r\n                        <th>Person Name</th>\r\n                        <th>Car Booked</th>\r\n                        <th>Vehicle Number</th>\r\n                        <th>Booked On</th>\r\n                        <th>Returning Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.BookingsData.map((item) => (\r\n                        <tr key={item.carnumber}>\r\n                            <td>{item.fullName}</td>\r\n                            <td>{item.carname}</td>\r\n                            <td>{item.vehiclenumber}</td>\r\n                            <td>{this.convertDate(item.Booked)}</td>\r\n                            <td>{this.convertDate(item.ReturningDate)}</td>\r\n                        </tr>\r\n\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NavigationBar from './NavigationBar'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport DisplayCars from './DisplayCars'\r\nimport Details from './Details.js'\r\nimport ContactMe from './ContactMe'\r\nimport DisplayForm from './DisplayForm'\r\nimport CurrentBookings from './CurrentBookings'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <BrowserRouter>\r\n                <NavigationBar />\r\n                <Route path='/' exact component={DisplayCars} />\r\n                <Route path='/dashboard' component={DisplayCars} />\r\n                <Route path={\"/details/:item\"} render={(props) => <Details {...props} />} />\r\n                <Route path='/contactme' component={ContactMe} />\r\n                <Route path={\"/enterdetails/:id\"} component={DisplayForm} />\r\n                <Route path='/bookings' component={CurrentBookings} />\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App; ","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './caragency.css';\r\n\r\nReactDom.render(\r\n    <App />, document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}